{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CannotSellZeroTokens",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1167FailedCreateClone",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MetadataEmpty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PlatformFeeReceiverEmpty",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_tokenSupplyAfterFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_platformFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_communitySupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_marketCapThreshold",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_launchboxExchangeImplementation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_platformFeeAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_router",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_communityTreasuryOwner",
              "type": "address"
            }
          ],
          "internalType": "struct LaunchboxERC20.InitializeParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launchboxExchange",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadataURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611543806100df6000396000f3fe6080604052600436106100c75760003560e01c80634b0a7f8b1161007457806395d89b411161004e57806395d89b411461027d578063a9059cbb14610292578063dd62ed3e146102b257600080fd5b80634b0a7f8b146101b657806370a08231146101ee5780638e14baf01461025057600080fd5b806318160ddd116100a557806318160ddd1461013c57806323b872dd1461017a578063313ce5671461019a57600080fd5b806303ee438c146100cc57806306fdde03146100f7578063095ea7b31461010c575b600080fd5b3480156100d857600080fd5b506100e1610324565b6040516100ee9190610fd2565b60405180910390f35b34801561010357600080fd5b506100e16103b2565b34801561011857600080fd5b5061012c610127366004611062565b610487565b60405190151581526020016100ee565b34801561014857600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016100ee565b34801561018657600080fd5b5061012c61019536600461108c565b6104a1565b3480156101a657600080fd5b50604051601281526020016100ee565b6101c96101c43660046111cc565b6104c5565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ee565b3480156101fa57600080fd5b5061016c6102093660046112f9565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b34801561025c57600080fd5b506001546101c99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561028957600080fd5b506100e16108af565b34801561029e57600080fd5b5061012c6102ad366004611062565b610900565b3480156102be57600080fd5b5061016c6102cd36600461131b565b73ffffffffffffffffffffffffffffffffffffffff91821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b600080546103319061134e565b80601f016020809104026020016040519081016040528092919081815260200182805461035d9061134e565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b505050505081565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00916104039061134e565b80601f016020809104026020016040519081016040528092919081815260200182805461042f9061134e565b801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b505050505091505090565b60003361049581858561090e565b60019150505b92915050565b6000336104af858285610920565b6104ba858585610a13565b506001949350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080546000919068010000000000000000810460ff16159067ffffffffffffffff1683811580156105135750825b905060008267ffffffffffffffff1660011480156105305750303b155b90508115801561053e575080155b15610575576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117855583156105d65784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b6105e887600001518860200151610abe565b866040015151600003610627576040517f35b2646f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660600151600003610665576040517f2937fa8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604087015160009061067790826113ef565b506106858760e00151610ad4565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556080870151156107395761010087015173ffffffffffffffffffffffffffffffffffffffff16610726576040517f37cc102a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107398761010001518860800151610b6c565b60a087015115610756576107568761014001518860a00151610b6c565b600154606088015161077e9173ffffffffffffffffffffffffffffffffffffffff1690610b6c565b600154606088015160c08901516101208a01516040517f9e3d87cd0000000000000000000000000000000000000000000000000000000081523060048201526024810193909352604483019190915273ffffffffffffffffffffffffffffffffffffffff908116606483015290911690639e3d87cd90608401600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b505060015473ffffffffffffffffffffffffffffffffffffffff169750505083156108a55784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050919050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00916104039061134e565b600033610495818585610a13565b61091b8383836001610bc8565b505050565b73ffffffffffffffffffffffffffffffffffffffff83811660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0d57818110156109fe576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064015b60405180910390fd5b610a0d84848484036000610bc8565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a63576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b73ffffffffffffffffffffffffffffffffffffffff8216610ab3576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b61091b838383610d35565b610ac6610f06565b610ad08282610f6f565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610b67576040517fc2f868f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b73ffffffffffffffffffffffffffffffffffffffff8216610bbc576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b610ad060008383610d35565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8516610c39576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b73ffffffffffffffffffffffffffffffffffffffff8416610c89576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260018301602090815260408083209388168352929052208390558115610d2e578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610d2591815260200190565b60405180910390a35b5050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8416610d905781816002016000828254610d859190611509565b90915550610e429050565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020829052604090205482811015610e16576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101829052604481018490526064016109f5565b73ffffffffffffffffffffffffffffffffffffffff851660009081526020839052604090209083900390555b73ffffffffffffffffffffffffffffffffffffffff8316610e6d576002810180548390039055610e99565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020829052604090208054830190555b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ef891815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610f6d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610f77610f06565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610fc384826113ef565b5060048101610a0d83826113ef565b600060208083528351808285015260005b81811015610fff57858101830151858201604001528201610fe3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b6757600080fd5b6000806040838503121561107557600080fd5b61107e8361103e565b946020939093013593505050565b6000806000606084860312156110a157600080fd5b6110aa8461103e565b92506110b86020850161103e565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561111b5761111b6110c8565b60405290565b600082601f83011261113257600080fd5b813567ffffffffffffffff8082111561114d5761114d6110c8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611193576111936110c8565b816040528381528660208588010111156111ac57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156111de57600080fd5b813567ffffffffffffffff808211156111f657600080fd5b90830190610160828603121561120b57600080fd5b6112136110f7565b82358281111561122257600080fd5b61122e87828601611121565b82525060208301358281111561124357600080fd5b61124f87828601611121565b60208301525060408301358281111561126757600080fd5b61127387828601611121565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c08201526112ad60e0840161103e565b60e082015261010091506112c282840161103e565b8282015261012091506112d682840161103e565b8282015261014091506112ea82840161103e565b91810191909152949350505050565b60006020828403121561130b57600080fd5b6113148261103e565b9392505050565b6000806040838503121561132e57600080fd5b6113378361103e565b91506113456020840161103e565b90509250929050565b600181811c9082168061136257607f821691505b60208210810361139b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561091b57600081815260208120601f850160051c810160208610156113c85750805b601f850160051c820191505b818110156113e7578281556001016113d4565b505050505050565b815167ffffffffffffffff811115611409576114096110c8565b61141d81611417845461134e565b846113a1565b602080601f831160018114611470576000841561143a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556113e7565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156114bd5788860151825594840194600190910190840161149e565b50858210156114f957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561049b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd",
    "sourceMap": "257:2118:50:-:0;;;889:53;;;;;;;;;-1:-1:-1;913:22:50;:20;:22::i;:::-;257:2118;;7711:422:26;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:26;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:26;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:26;-1:-1:-1;;;;;8035:33:26;;;;;8087:29;;158:50:70;;;8087:29:26;;146:2:70;131:18;8087:29:26;;;;;;;7981:146;7760:373;7711:422::o;14:200:70:-;257:2118:50;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c75760003560e01c80634b0a7f8b1161007457806395d89b411161004e57806395d89b411461027d578063a9059cbb14610292578063dd62ed3e146102b257600080fd5b80634b0a7f8b146101b657806370a08231146101ee5780638e14baf01461025057600080fd5b806318160ddd116100a557806318160ddd1461013c57806323b872dd1461017a578063313ce5671461019a57600080fd5b806303ee438c146100cc57806306fdde03146100f7578063095ea7b31461010c575b600080fd5b3480156100d857600080fd5b506100e1610324565b6040516100ee9190610fd2565b60405180910390f35b34801561010357600080fd5b506100e16103b2565b34801561011857600080fd5b5061012c610127366004611062565b610487565b60405190151581526020016100ee565b34801561014857600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016100ee565b34801561018657600080fd5b5061012c61019536600461108c565b6104a1565b3480156101a657600080fd5b50604051601281526020016100ee565b6101c96101c43660046111cc565b6104c5565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ee565b3480156101fa57600080fd5b5061016c6102093660046112f9565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b34801561025c57600080fd5b506001546101c99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561028957600080fd5b506100e16108af565b34801561029e57600080fd5b5061012c6102ad366004611062565b610900565b3480156102be57600080fd5b5061016c6102cd36600461131b565b73ffffffffffffffffffffffffffffffffffffffff91821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b600080546103319061134e565b80601f016020809104026020016040519081016040528092919081815260200182805461035d9061134e565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b505050505081565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00916104039061134e565b80601f016020809104026020016040519081016040528092919081815260200182805461042f9061134e565b801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b505050505091505090565b60003361049581858561090e565b60019150505b92915050565b6000336104af858285610920565b6104ba858585610a13565b506001949350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080546000919068010000000000000000810460ff16159067ffffffffffffffff1683811580156105135750825b905060008267ffffffffffffffff1660011480156105305750303b155b90508115801561053e575080155b15610575576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117855583156105d65784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b6105e887600001518860200151610abe565b866040015151600003610627576040517f35b2646f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660600151600003610665576040517f2937fa8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604087015160009061067790826113ef565b506106858760e00151610ad4565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556080870151156107395761010087015173ffffffffffffffffffffffffffffffffffffffff16610726576040517f37cc102a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107398761010001518860800151610b6c565b60a087015115610756576107568761014001518860a00151610b6c565b600154606088015161077e9173ffffffffffffffffffffffffffffffffffffffff1690610b6c565b600154606088015160c08901516101208a01516040517f9e3d87cd0000000000000000000000000000000000000000000000000000000081523060048201526024810193909352604483019190915273ffffffffffffffffffffffffffffffffffffffff908116606483015290911690639e3d87cd90608401600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b505060015473ffffffffffffffffffffffffffffffffffffffff169750505083156108a55784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050919050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00916104039061134e565b600033610495818585610a13565b61091b8383836001610bc8565b505050565b73ffffffffffffffffffffffffffffffffffffffff83811660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0d57818110156109fe576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064015b60405180910390fd5b610a0d84848484036000610bc8565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a63576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b73ffffffffffffffffffffffffffffffffffffffff8216610ab3576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b61091b838383610d35565b610ac6610f06565b610ad08282610f6f565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610b67576040517fc2f868f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b73ffffffffffffffffffffffffffffffffffffffff8216610bbc576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b610ad060008383610d35565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8516610c39576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b73ffffffffffffffffffffffffffffffffffffffff8416610c89576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016109f5565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260018301602090815260408083209388168352929052208390558115610d2e578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610d2591815260200190565b60405180910390a35b5050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0073ffffffffffffffffffffffffffffffffffffffff8416610d905781816002016000828254610d859190611509565b90915550610e429050565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020829052604090205482811015610e16576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101829052604481018490526064016109f5565b73ffffffffffffffffffffffffffffffffffffffff851660009081526020839052604090209083900390555b73ffffffffffffffffffffffffffffffffffffffff8316610e6d576002810180548390039055610e99565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020829052604090208054830190555b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ef891815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610f6d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610f77610f06565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610fc384826113ef565b5060048101610a0d83826113ef565b600060208083528351808285015260005b81811015610fff57858101830151858201604001528201610fe3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b6757600080fd5b6000806040838503121561107557600080fd5b61107e8361103e565b946020939093013593505050565b6000806000606084860312156110a157600080fd5b6110aa8461103e565b92506110b86020850161103e565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561111b5761111b6110c8565b60405290565b600082601f83011261113257600080fd5b813567ffffffffffffffff8082111561114d5761114d6110c8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611193576111936110c8565b816040528381528660208588010111156111ac57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156111de57600080fd5b813567ffffffffffffffff808211156111f657600080fd5b90830190610160828603121561120b57600080fd5b6112136110f7565b82358281111561122257600080fd5b61122e87828601611121565b82525060208301358281111561124357600080fd5b61124f87828601611121565b60208301525060408301358281111561126757600080fd5b61127387828601611121565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c08201526112ad60e0840161103e565b60e082015261010091506112c282840161103e565b8282015261012091506112d682840161103e565b8282015261014091506112ea82840161103e565b91810191909152949350505050565b60006020828403121561130b57600080fd5b6113148261103e565b9392505050565b6000806040838503121561132e57600080fd5b6113378361103e565b91506113456020840161103e565b90509250929050565b600181811c9082168061136257607f821691505b60208210810361139b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561091b57600081815260208120601f850160051c810160208610156113c85750805b601f850160051c820191505b818110156113e7578281556001016113d4565b505050505050565b815167ffffffffffffffff811115611409576114096110c8565b61141d81611417845461134e565b846113a1565b602080601f831160018114611470576000841561143a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556113e7565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156114bd5788860151825594840194600190910190840161149e565b50858210156114f957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561049b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd",
    "sourceMap": "257:2118:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3011:144:27;;;;;;;;;;;;;:::i;5505:186::-;;;;;;;;;;-1:-1:-1;5505:186:27;;;;;:::i;:::-;;:::i;:::-;;;1251:14:70;;1244:22;1226:41;;1214:2;1199:18;5505:186:27;1086:187:70;4191:152:27;;;;;;;;;;-1:-1:-1;4322:14:27;;4191:152;;;1424:25:70;;;1412:2;1397:18;4191:152:27;1278:177:70;6251:244:27;;;;;;;;;;-1:-1:-1;6251:244:27;;;;;:::i;:::-;;:::i;4049:82::-;;;;;;;;;;-1:-1:-1;4049:82:27;;4122:2;1935:36:70;;1923:2;1908:18;4049:82:27;1793:184:70;948:1425:50;;;;;;:::i;:::-;;:::i;:::-;;;4914:42:70;4902:55;;;4884:74;;4872:2;4857:18;948:1425:50;4738:226:70;4401:171:27;;;;;;;;;;-1:-1:-1;4401:171:27;;;;;:::i;:::-;4545:20;;4466:7;4545:20;;;2359;4545;;;;;;;4401:171;338:40:50;;;;;;;;;;-1:-1:-1;338:40:50;;;;;;;;3268:148:27;;;;;;;;;;;;;:::i;4767:178::-;;;;;;;;;;-1:-1:-1;4767:178:27;;;;;:::i;:::-;;:::i;5003:195::-;;;;;;;;;;-1:-1:-1;5003:195:27;;;;;:::i;:::-;5162:20;;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195;307:25:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3011:144:27:-;3141:7;3134:14;;3056:13;;2359:20;;3134:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:29;5632:31:27;966:10:29;5648:7:27;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;6251:244::-;6338:4;966:10:29;6394:37:27;6410:4;966:10:29;6425:5:27;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;-1:-1:-1;6484:4:27;;6251:244;-1:-1:-1;;;;6251:244:27:o;948:1425:50:-;8870:21:26;4302:15;;1038:7:50;;8870:21:26;4302:15;;;;;4301:16;;4348:14;;1038:7:50;4726:16:26;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:26;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;1057:42:50::1;1070:6;:12;;;1084:6;:14;;;1057:12;:42::i;:::-;1119:6;:19;;;1113:33;1150:1;1113:38:::0;1109:91:::1;;1174:15;;;;;;;;;;;;;;1109:91;1213:6;:27;;;1244:1;1213:32:::0;1209:92:::1;;1268:22;;;;;;;;;;;;;;1209:92;1325:19;::::0;::::1;::::0;1311:11:::1;::::0;:33:::1;::::0;:11;:33:::1;:::i;:::-;;1383:53;1396:6;:39;;;1383:12;:53::i;:::-;1355:17;:82:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1451:19:::1;::::0;::::1;::::0;:24;1447:291:::1;;1495:26;::::0;::::1;::::0;:40:::1;;1491:112;;1562:26;;;;;;;;;;;;;;1491:112;1673:54;1679:6;:26;;;1707:6;:19;;;1673:5;:54::i;:::-;1751:23;::::0;::::1;::::0;:28;1747:303:::1;;1977:62;1983:6;:30;;;2015:6;:23;;;1977:5;:62::i;:::-;2118:17;::::0;2137:27:::1;::::0;::::1;::::0;2112:53:::1;::::0;2118:17:::1;;::::0;2112:5:::1;:53::i;:::-;2193:17;::::0;2251:27:::1;::::0;::::1;::::0;2280:26:::1;::::0;::::1;::::0;2308:14:::1;::::0;::::1;::::0;2175:157:::1;::::0;;;;2244:4:::1;2175:157;::::0;::::1;8789:34:70::0;8839:18;;;8832:34;;;;8882:18;;;8875:34;;;;2193:17:50::1;8945:15:70::0;;;8925:18;;;8918:43;2193:17:50;;::::1;::::0;2175:47:::1;::::0;8700:19:70;;2175:157:50::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2349:17:50::1;::::0;::::1;;::::0;-1:-1:-1;;;5070:14:26;5066:101;;;5100:23;;;;;;5142:14;;-1:-1:-1;9125:50:70;;5142:14:26;;9113:2:70;9098:18;5142:14:26;;;;;;;5066:101;4092:1081;;;;;948:1425:50;;;:::o;3268:148:27:-;3400:9;3393:16;;3315:13;;2359:20;;3393:16;;;:::i;4767:178::-;4836:4;966:10:29;4890:27:27;966:10:29;4907:2:27;4911:5;4890:9;:27::i;10264:128::-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;5162:20;;;;12092:24;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;12178:17;12158:37;;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;;;;9418:42:70;9406:55;;12266:60:27;;;9388:74:70;9478:18;;;9471:34;;;9521:18;;;9514:34;;;9361:18;;12266:60:27;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;6951:18;;;6947:86;;6992:30;;;;;7019:1;6992:30;;;4884:74:70;4857:18;;6992:30:27;4738:226:70;6947:86:27;7046:16;;;7042:86;;7085:32;;;;;7114:1;7085:32;;;4884:74:70;4857:18;;7085:32:27;4738:226:70;7042:86:27;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;2577:147::-;6931:20:26;:18;:20::i;:::-;2679:38:27::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;1047:787:33:-;1104:16;1436:48;1418:14;1412:4;1408:25;1402:4;1398:36;1395:90;1389:4;1382:104;1643:32;1626:14;1620:4;1616:25;1613:63;1607:4;1600:77;1718:4;1712;1709:1;1702:21;1690:33;-1:-1:-1;1746:22:33;;;1742:86;;1791:26;;;;;;;;;;;;;;1742:86;1047:787;;;:::o;8996:208:27:-;9066:21;;;9062:91;;9110:32;;;;;9139:1;9110:32;;;4884:74:70;4857:18;;9110:32:27;4738:226:70;9062:91:27;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;11224:487::-;2359:20;11389:19;;;11385:89;;11431:32;;;;;11460:1;11431:32;;;4884:74:70;4857:18;;11431:32:27;4738:226:70;11385:89:27;11487:21;;;11483:90;;11531:31;;;;;11559:1;11531:31;;;4884:74:70;4857:18;;11531:31:27;4738:226:70;11483:90:27;11582:20;;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;1424:25:70;;1412:2;1397:18;;1278:177;11663:31:27;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;2359:20;7625:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:27;;-1:-1:-1;7621:546:27;;7837:17;;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;;;;9418:42:70;9406:55;;7918:50:27;;;9388:74:70;9478:18;;;9471:34;;;9521:18;;;9514:34;;;9361:18;;7918:50:27;9186:368:70;7868:115:27;8103:17;;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;8181:16;;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;8557:15;;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;1424::70;;1412:2;1397:18;;1278:177;8621:25:27;;;;;;;;7558:1095;7483:1170;;;:::o;7084:141:26:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:27:-;6931:20:26;:18;:20::i;:::-;2359::27;2895:7;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:27::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;14:607:70:-:0;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;827:254;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:70:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:184::-;2034:77;2031:1;2024:88;2131:4;2128:1;2121:15;2155:4;2152:1;2145:15;2171:250;2238:2;2232:9;2280:6;2268:19;;2317:18;2302:34;;2338:22;;;2299:62;2296:88;;;2364:18;;:::i;:::-;2400:2;2393:22;2171:250;:::o;2426:778::-;2469:5;2522:3;2515:4;2507:6;2503:17;2499:27;2489:55;;2540:1;2537;2530:12;2489:55;2576:6;2563:20;2602:18;2639:2;2635;2632:10;2629:36;;;2645:18;;:::i;:::-;2779:2;2773:9;2841:4;2833:13;;2684:66;2829:22;;;2853:2;2825:31;2821:40;2809:53;;;2877:18;;;2897:22;;;2874:46;2871:72;;;2923:18;;:::i;:::-;2963:10;2959:2;2952:22;2998:2;2990:6;2983:18;3044:3;3037:4;3032:2;3024:6;3020:15;3016:26;3013:35;3010:55;;;3061:1;3058;3051:12;3010:55;3125:2;3118:4;3110:6;3106:17;3099:4;3091:6;3087:17;3074:54;3172:1;3165:4;3160:2;3152:6;3148:15;3144:26;3137:37;3192:6;3183:15;;;;;;2426:778;;;;:::o;3209:1524::-;3303:6;3356:2;3344:9;3335:7;3331:23;3327:32;3324:52;;;3372:1;3369;3362:12;3324:52;3412:9;3399:23;3441:18;3482:2;3474:6;3471:14;3468:34;;;3498:1;3495;3488:12;3468:34;3521:22;;;;3577:6;3559:16;;;3555:29;3552:49;;;3597:1;3594;3587:12;3552:49;3623:17;;:::i;:::-;3678:2;3665:16;3706:2;3696:8;3693:16;3690:36;;;3722:1;3719;3712:12;3690:36;3749:45;3786:7;3775:8;3771:2;3767:17;3749:45;:::i;:::-;3742:5;3735:60;;3841:2;3837;3833:11;3820:25;3870:2;3860:8;3857:16;3854:36;;;3886:1;3883;3876:12;3854:36;3922:45;3959:7;3948:8;3944:2;3940:17;3922:45;:::i;:::-;3917:2;3910:5;3906:14;3899:69;;4014:2;4010;4006:11;3993:25;4043:2;4033:8;4030:16;4027:36;;;4059:1;4056;4049:12;4027:36;4095:45;4132:7;4121:8;4117:2;4113:17;4095:45;:::i;:::-;4090:2;4083:5;4079:14;4072:69;;4194:2;4190;4186:11;4173:25;4168:2;4161:5;4157:14;4150:49;4253:3;4249:2;4245:12;4232:26;4226:3;4219:5;4215:15;4208:51;4313:3;4309:2;4305:12;4292:26;4286:3;4279:5;4275:15;4268:51;4373:3;4369:2;4365:12;4352:26;4346:3;4339:5;4335:15;4328:51;4412:32;4439:3;4435:2;4431:12;4412:32;:::i;:::-;4406:3;4399:5;4395:15;4388:57;4464:3;4454:13;;4499:31;4526:2;4522;4518:11;4499:31;:::i;:::-;4494:2;4487:5;4483:14;4476:55;4550:3;4540:13;;4585:31;4612:2;4608;4604:11;4585:31;:::i;:::-;4580:2;4573:5;4569:14;4562:55;4636:3;4626:13;;4671:31;4698:2;4694;4690:11;4671:31;:::i;:::-;4655:14;;;4648:55;;;;4659:5;3209:1524;-1:-1:-1;;;;3209:1524:70:o;4969:186::-;5028:6;5081:2;5069:9;5060:7;5056:23;5052:32;5049:52;;;5097:1;5094;5087:12;5049:52;5120:29;5139:9;5120:29;:::i;:::-;5110:39;4969:186;-1:-1:-1;;;4969:186:70:o;5407:260::-;5475:6;5483;5536:2;5524:9;5515:7;5511:23;5507:32;5504:52;;;5552:1;5549;5542:12;5504:52;5575:29;5594:9;5575:29;:::i;:::-;5565:39;;5623:38;5657:2;5646:9;5642:18;5623:38;:::i;:::-;5613:48;;5407:260;;;;;:::o;5672:437::-;5751:1;5747:12;;;;5794;;;5815:61;;5869:4;5861:6;5857:17;5847:27;;5815:61;5922:2;5914:6;5911:14;5891:18;5888:38;5885:218;;5959:77;5956:1;5949:88;6060:4;6057:1;6050:15;6088:4;6085:1;6078:15;5885:218;;5672:437;;;:::o;6240:545::-;6342:2;6337:3;6334:11;6331:448;;;6378:1;6403:5;6399:2;6392:17;6448:4;6444:2;6434:19;6518:2;6506:10;6502:19;6499:1;6495:27;6489:4;6485:38;6554:4;6542:10;6539:20;6536:47;;;-1:-1:-1;6577:4:70;6536:47;6632:2;6627:3;6623:12;6620:1;6616:20;6610:4;6606:31;6596:41;;6687:82;6705:2;6698:5;6695:13;6687:82;;;6750:17;;;6731:1;6720:13;6687:82;;;6691:3;;;6240:545;;;:::o;7021:1471::-;7147:3;7141:10;7174:18;7166:6;7163:30;7160:56;;;7196:18;;:::i;:::-;7225:97;7315:6;7275:38;7307:4;7301:11;7275:38;:::i;:::-;7269:4;7225:97;:::i;:::-;7377:4;;7441:2;7430:14;;7458:1;7453:782;;;;8279:1;8296:6;8293:89;;;-1:-1:-1;8348:19:70;;;8342:26;8293:89;6927:66;6918:1;6914:11;;;6910:84;6906:89;6896:100;7002:1;6998:11;;;6893:117;8395:81;;7423:1063;;7453:782;6187:1;6180:14;;;6224:4;6211:18;;7501:66;7489:79;;;7666:236;7680:7;7677:1;7674:14;7666:236;;;7769:19;;;7763:26;7748:42;;7861:27;;;;7829:1;7817:14;;;;7696:19;;7666:236;;;7670:3;7930:6;7921:7;7918:19;7915:261;;;7991:19;;;7985:26;8092:66;8074:1;8070:14;;;8086:3;8066:24;8062:97;8058:102;8043:118;8028:134;;7915:261;-1:-1:-1;;;;;8222:1:70;8206:14;;;8202:22;8189:36;;-1:-1:-1;7021:1471:70:o;9559:279::-;9624:9;;;9645:10;;;9642:190;;;9688:77;9685:1;9678:88;9789:4;9786:1;9779:15;9817:4;9814:1;9807:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "initialize((string,string,string,uint256,uint256,uint256,uint256,address,address,address,address))": "4b0a7f8b",
    "launchboxExchange()": "8e14baf0",
    "metadataURI()": "03ee438c",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotSellZeroTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1167FailedCreateClone\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MetadataEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PlatformFeeReceiverEmpty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tokenSupplyAfterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_communitySupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketCapThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_launchboxExchangeImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_communityTreasuryOwner\",\"type\":\"address\"}],\"internalType\":\"struct LaunchboxERC20.InitializeParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchboxExchange\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1167FailedCreateClone()\":[{\"details\":\"A clone instance deployment failed.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/launchbox/token/LaunchboxERC20.sol\":\"LaunchboxERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@aerodrome/contracts/=lib/contracts/\",\":@opengsn/=lib/contracts/lib/gsn/packages/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/contracts/lib/v3-core/\",\":contracts/=lib/contracts/contracts/\",\":ds-test/=lib/contracts/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/contracts/lib/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/solady/src/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/contracts/lib/v3-core/\"]},\"sources\":{\"lib/contracts/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0x3f27948c9630a73b69ef67c7d48f281e2a55fb7448069b74f7efc62ce8936def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa11dc0cb8f0da4b63be911aebe38eaca545c5f370479ee45bb93cfc748a07\",\"dweb:/ipfs/QmWgkipaWSvLVdtn1L4xMNEbSaRnLwzpR6e2fFWWB8n5sj\"]},\"lib/contracts/contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x6f443b30d7c2ba47ca3e0ce6344ab885c325cd223f14cd96ddba014c1033a2ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82a174ff95c5f792522d1ef3a468ea367075b168c7a0189d8918079756670a53\",\"dweb:/ipfs/Qmejcmattr1iC4hm88Kho3jf1euSwcms9xLN7tY297hPrv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b\",\"dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"src/launchbox/exchange/BancorBondingCurve.sol\":{\"keccak256\":\"0x37c9eeca6b27cb88eda8d658f3ad9e4122da671ae2ce3b1e8ab7d67e0fe70760\",\"urls\":[\"bzz-raw://ddccc489e8983b427c86b9a48c7050b9de738b14a96921429529182b285e59c2\",\"dweb:/ipfs/QmWacxBenznPaGxDRwxWT6bi6iCKsZnXB8VnciXaEXmLTo\"]},\"src/launchbox/exchange/LaunchboxExchange.sol\":{\"keccak256\":\"0x5d57fb32fde6cf59eeef963414e0bb4d398add27e1c45a5fef1519535ea68c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d48ecd6a7ec89c10bf951230babdb902916376ca18a8e5807845ee476a3678c5\",\"dweb:/ipfs/QmYWwz9t2cyDeFkdtjTB7euKvnCkNf1wFma23JZAA9Q8co\"]},\"src/launchbox/exchange/Power.sol\":{\"keccak256\":\"0xb79790830b6959b04f4105e2d86112cfd0b18bc9316443d2f151ded2687db79a\",\"urls\":[\"bzz-raw://2f31d1445325ed0cc7f1ac5e553a3290a8db1cfb06da0701891092e0181a31c4\",\"dweb:/ipfs/QmQXmZcCe8vLw6my2vLkNgEbTVW4q1zhYwZeHfseAuqiDP\"]},\"src/launchbox/token/LaunchboxERC20.sol\":{\"keccak256\":\"0xdf9d0e16e57bb0dc2fb1912809acf5aeda5f417b8cfb3d6701a8fa617b76fb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7a0685d0debaec66c1b4e8a9114b8a96ea2cb4030dc3edc8f4a214058f20d64\",\"dweb:/ipfs/QmeursMCEmHhYGtEVu8xMvsqzfMkKMDAyz5buqGwDBjTA5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotSellZeroTokens"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC1167FailedCreateClone"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MetadataEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PlatformFeeReceiverEmpty"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LaunchboxERC20.InitializeParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_tokenSupplyAfterFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_platformFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_communitySupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_marketCapThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_launchboxExchangeImplementation",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_platformFeeAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_router",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_communityTreasuryOwner",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "launchboxExchange",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "metadataURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aerodrome/contracts/=lib/contracts/",
        "@opengsn/=lib/contracts/lib/gsn/packages/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/contracts/lib/v3-core/",
        "contracts/=lib/contracts/contracts/",
        "ds-test/=lib/contracts/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "gsn/=lib/contracts/lib/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solady/=lib/solady/src/",
        "utils/=lib/contracts/test/utils/",
        "v3-core/=lib/contracts/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/launchbox/token/LaunchboxERC20.sol": "LaunchboxERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/contracts/contracts/interfaces/IRouter.sol": {
        "keccak256": "0x3f27948c9630a73b69ef67c7d48f281e2a55fb7448069b74f7efc62ce8936def",
        "urls": [
          "bzz-raw://96fa11dc0cb8f0da4b63be911aebe38eaca545c5f370479ee45bb93cfc748a07",
          "dweb:/ipfs/QmWgkipaWSvLVdtn1L4xMNEbSaRnLwzpR6e2fFWWB8n5sj"
        ],
        "license": "MIT"
      },
      "lib/contracts/contracts/interfaces/IWETH.sol": {
        "keccak256": "0x6f443b30d7c2ba47ca3e0ce6344ab885c325cd223f14cd96ddba014c1033a2ec",
        "urls": [
          "bzz-raw://82a174ff95c5f792522d1ef3a468ea367075b168c7a0189d8918079756670a53",
          "dweb:/ipfs/Qmejcmattr1iC4hm88Kho3jf1euSwcms9xLN7tY297hPrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f",
        "urls": [
          "bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040",
          "dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155",
        "urls": [
          "bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b",
          "dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "src/launchbox/exchange/BancorBondingCurve.sol": {
        "keccak256": "0x37c9eeca6b27cb88eda8d658f3ad9e4122da671ae2ce3b1e8ab7d67e0fe70760",
        "urls": [
          "bzz-raw://ddccc489e8983b427c86b9a48c7050b9de738b14a96921429529182b285e59c2",
          "dweb:/ipfs/QmWacxBenznPaGxDRwxWT6bi6iCKsZnXB8VnciXaEXmLTo"
        ],
        "license": null
      },
      "src/launchbox/exchange/LaunchboxExchange.sol": {
        "keccak256": "0x5d57fb32fde6cf59eeef963414e0bb4d398add27e1c45a5fef1519535ea68c06",
        "urls": [
          "bzz-raw://d48ecd6a7ec89c10bf951230babdb902916376ca18a8e5807845ee476a3678c5",
          "dweb:/ipfs/QmYWwz9t2cyDeFkdtjTB7euKvnCkNf1wFma23JZAA9Q8co"
        ],
        "license": "MIT"
      },
      "src/launchbox/exchange/Power.sol": {
        "keccak256": "0xb79790830b6959b04f4105e2d86112cfd0b18bc9316443d2f151ded2687db79a",
        "urls": [
          "bzz-raw://2f31d1445325ed0cc7f1ac5e553a3290a8db1cfb06da0701891092e0181a31c4",
          "dweb:/ipfs/QmQXmZcCe8vLw6my2vLkNgEbTVW4q1zhYwZeHfseAuqiDP"
        ],
        "license": null
      },
      "src/launchbox/token/LaunchboxERC20.sol": {
        "keccak256": "0xdf9d0e16e57bb0dc2fb1912809acf5aeda5f417b8cfb3d6701a8fa617b76fb4e",
        "urls": [
          "bzz-raw://f7a0685d0debaec66c1b4e8a9114b8a96ea2cb4030dc3edc8f4a214058f20d64",
          "dweb:/ipfs/QmeursMCEmHhYGtEVu8xMvsqzfMkKMDAyz5buqGwDBjTA5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/launchbox/token/LaunchboxERC20.sol",
    "id": 54897,
    "exportedSymbols": {
      "Clones": [
        49655
      ],
      "ContextUpgradeable": [
        49245
      ],
      "ERC20Upgradeable": [
        48067
      ],
      "IERC20": [
        50248
      ],
      "IERC20Errors": [
        49475
      ],
      "IERC20Metadata": [
        50274
      ],
      "Initializable": [
        47450
      ],
      "LaunchboxERC20": [
        54896
      ],
      "LaunchboxExchange": [
        52526
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2344:50",
    "nodes": [
      {
        "id": 54731,
        "nodeType": "PragmaDirective",
        "src": "32:23:50",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 54732,
        "nodeType": "ImportDirective",
        "src": "57:78:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54897,
        "sourceUnit": 48068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54733,
        "nodeType": "ImportDirective",
        "src": "136:50:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54897,
        "sourceUnit": 49656,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54735,
        "nodeType": "ImportDirective",
        "src": "187:68:50",
        "nodes": [],
        "absolutePath": "src/launchbox/exchange/LaunchboxExchange.sol",
        "file": "../exchange/LaunchboxExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54897,
        "sourceUnit": 52527,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54734,
              "name": "LaunchboxExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52526,
              "src": "195:17:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54896,
        "nodeType": "ContractDefinition",
        "src": "257:2118:50",
        "nodes": [
          {
            "id": 54739,
            "nodeType": "VariableDeclaration",
            "src": "307:25:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "03ee438c",
            "mutability": "mutable",
            "name": "metadataURI",
            "nameLocation": "321:11:50",
            "scope": 54896,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54738,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "307:6:50",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54741,
            "nodeType": "VariableDeclaration",
            "src": "338:40:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e14baf0",
            "mutability": "mutable",
            "name": "launchboxExchange",
            "nameLocation": "361:17:50",
            "scope": 54896,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 54740,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "338:15:50",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54764,
            "nodeType": "StructDefinition",
            "src": "385:398:50",
            "nodes": [],
            "canonicalName": "LaunchboxERC20.InitializeParams",
            "members": [
              {
                "constant": false,
                "id": 54743,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "426:5:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "419:12:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54742,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "419:6:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54745,
                "mutability": "mutable",
                "name": "_symbol",
                "nameLocation": "448:7:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "441:14:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54744,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:6:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54747,
                "mutability": "mutable",
                "name": "_metadataURI",
                "nameLocation": "472:12:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "465:19:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54746,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "465:6:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54749,
                "mutability": "mutable",
                "name": "_tokenSupplyAfterFee",
                "nameLocation": "502:20:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "494:28:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54748,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54751,
                "mutability": "mutable",
                "name": "_platformFee",
                "nameLocation": "540:12:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "532:20:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54750,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "532:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54753,
                "mutability": "mutable",
                "name": "_communitySupply",
                "nameLocation": "570:16:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "562:24:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54752,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "562:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54755,
                "mutability": "mutable",
                "name": "_marketCapThreshold",
                "nameLocation": "604:19:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "596:27:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54754,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "596:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54757,
                "mutability": "mutable",
                "name": "_launchboxExchangeImplementation",
                "nameLocation": "641:32:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "633:40:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54756,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "633:7:50",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54759,
                "mutability": "mutable",
                "name": "_platformFeeAddress",
                "nameLocation": "691:19:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "683:27:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54758,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "683:7:50",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54761,
                "mutability": "mutable",
                "name": "_router",
                "nameLocation": "728:7:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "720:15:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54760,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:7:50",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54763,
                "mutability": "mutable",
                "name": "_communityTreasuryOwner",
                "nameLocation": "753:23:50",
                "nodeType": "VariableDeclaration",
                "scope": 54764,
                "src": "745:31:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54762,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "745:7:50",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "InitializeParams",
            "nameLocation": "392:16:50",
            "scope": 54896,
            "visibility": "public"
          },
          {
            "id": 54766,
            "nodeType": "ErrorDefinition",
            "src": "789:22:50",
            "nodes": [],
            "errorSelector": "35b2646f",
            "name": "MetadataEmpty",
            "nameLocation": "795:13:50",
            "parameters": {
              "id": 54765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:2:50"
            }
          },
          {
            "id": 54768,
            "nodeType": "ErrorDefinition",
            "src": "816:29:50",
            "nodes": [],
            "errorSelector": "2937fa8c",
            "name": "CannotSellZeroTokens",
            "nameLocation": "822:20:50",
            "parameters": {
              "id": 54767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:2:50"
            }
          },
          {
            "id": 54770,
            "nodeType": "ErrorDefinition",
            "src": "850:33:50",
            "nodes": [],
            "errorSelector": "37cc102a",
            "name": "PlatformFeeReceiverEmpty",
            "nameLocation": "856:24:50",
            "parameters": {
              "id": 54769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:50"
            }
          },
          {
            "id": 54777,
            "nodeType": "FunctionDefinition",
            "src": "889:53:50",
            "nodes": [],
            "body": {
              "id": 54776,
              "nodeType": "Block",
              "src": "903:39:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54773,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47418,
                      "src": "913:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "913:22:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54775,
                  "nodeType": "ExpressionStatement",
                  "src": "913:22:50"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:50"
            },
            "returnParameters": {
              "id": 54772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:0:50"
            },
            "scope": 54896,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54895,
            "nodeType": "FunctionDefinition",
            "src": "948:1425:50",
            "nodes": [],
            "body": {
              "id": 54894,
              "nodeType": "Block",
              "src": "1047:1326:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54788,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54780,
                          "src": "1070:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                            "typeString": "struct LaunchboxERC20.InitializeParams memory"
                          }
                        },
                        "id": 54789,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1077:5:50",
                        "memberName": "_name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54743,
                        "src": "1070:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 54790,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54780,
                          "src": "1084:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                            "typeString": "struct LaunchboxERC20.InitializeParams memory"
                          }
                        },
                        "id": 54791,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1091:7:50",
                        "memberName": "_symbol",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54745,
                        "src": "1084:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 54787,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47518,
                      "src": "1057:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 54792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:42:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54793,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:42:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 54796,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54780,
                              "src": "1119:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                "typeString": "struct LaunchboxERC20.InitializeParams memory"
                              }
                            },
                            "id": 54797,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1126:12:50",
                            "memberName": "_metadataURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54747,
                            "src": "1119:19:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 54795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1113:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 54794,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1113:5:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1113:26:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1140:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1113:33:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1150:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1113:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54806,
                  "nodeType": "IfStatement",
                  "src": "1109:91:50",
                  "trueBody": {
                    "id": 54805,
                    "nodeType": "Block",
                    "src": "1153:47:50",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 54802,
                            "name": "MetadataEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54766,
                            "src": "1174:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1174:15:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54804,
                        "nodeType": "RevertStatement",
                        "src": "1167:22:50"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54807,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54780,
                        "src": "1213:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                          "typeString": "struct LaunchboxERC20.InitializeParams memory"
                        }
                      },
                      "id": 54808,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1220:20:50",
                      "memberName": "_tokenSupplyAfterFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54749,
                      "src": "1213:27:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1244:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1213:32:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54815,
                  "nodeType": "IfStatement",
                  "src": "1209:92:50",
                  "trueBody": {
                    "id": 54814,
                    "nodeType": "Block",
                    "src": "1247:54:50",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 54811,
                            "name": "CannotSellZeroTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54768,
                            "src": "1268:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1268:22:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54813,
                        "nodeType": "RevertStatement",
                        "src": "1261:29:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 54819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54816,
                      "name": "metadataURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54739,
                      "src": "1311:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54817,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54780,
                        "src": "1325:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                          "typeString": "struct LaunchboxERC20.InitializeParams memory"
                        }
                      },
                      "id": 54818,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1332:12:50",
                      "memberName": "_metadataURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54747,
                      "src": "1325:19:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1311:33:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 54820,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:33:50"
                },
                {
                  "expression": {
                    "id": 54830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54821,
                      "name": "launchboxExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54741,
                      "src": "1355:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54826,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54780,
                                "src": "1396:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                  "typeString": "struct LaunchboxERC20.InitializeParams memory"
                                }
                              },
                              "id": 54827,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1403:32:50",
                              "memberName": "_launchboxExchangeImplementation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54757,
                              "src": "1396:39:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 54824,
                              "name": "Clones",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49655,
                              "src": "1383:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Clones_$49655_$",
                                "typeString": "type(library Clones)"
                              }
                            },
                            "id": 54825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1390:5:50",
                            "memberName": "clone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49597,
                            "src": "1383:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) returns (address)"
                            }
                          },
                          "id": 54828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1383:53:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 54823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1375:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 54822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1375:8:50",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 54829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1375:62:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1355:82:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 54831,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:82:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54832,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54780,
                        "src": "1451:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                          "typeString": "struct LaunchboxERC20.InitializeParams memory"
                        }
                      },
                      "id": 54833,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1458:12:50",
                      "memberName": "_platformFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54751,
                      "src": "1451:19:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1474:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1451:24:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54856,
                  "nodeType": "IfStatement",
                  "src": "1447:291:50",
                  "trueBody": {
                    "id": 54855,
                    "nodeType": "Block",
                    "src": "1477:261:50",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 54842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54836,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54780,
                              "src": "1495:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                "typeString": "struct LaunchboxERC20.InitializeParams memory"
                              }
                            },
                            "id": 54837,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1502:19:50",
                            "memberName": "_platformFeeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54759,
                            "src": "1495:26:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 54840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1533:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 54839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1525:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1525:7:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1525:10:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1495:40:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 54847,
                        "nodeType": "IfStatement",
                        "src": "1491:112:50",
                        "trueBody": {
                          "id": 54846,
                          "nodeType": "Block",
                          "src": "1537:66:50",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 54843,
                                  "name": "PlatformFeeReceiverEmpty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54770,
                                  "src": "1562:24:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 54844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1562:26:50",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54845,
                              "nodeType": "RevertStatement",
                              "src": "1555:33:50"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54849,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54780,
                                "src": "1679:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                  "typeString": "struct LaunchboxERC20.InitializeParams memory"
                                }
                              },
                              "id": 54850,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1686:19:50",
                              "memberName": "_platformFeeAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54759,
                              "src": "1679:26:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 54851,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54780,
                                "src": "1707:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                  "typeString": "struct LaunchboxERC20.InitializeParams memory"
                                }
                              },
                              "id": 54852,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1714:12:50",
                              "memberName": "_platformFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54751,
                              "src": "1707:19:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 54848,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47899,
                            "src": "1673:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 54853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1673:54:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54854,
                        "nodeType": "ExpressionStatement",
                        "src": "1673:54:50"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54857,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54780,
                        "src": "1751:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                          "typeString": "struct LaunchboxERC20.InitializeParams memory"
                        }
                      },
                      "id": 54858,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1758:16:50",
                      "memberName": "_communitySupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54753,
                      "src": "1751:23:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1778:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1751:28:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54869,
                  "nodeType": "IfStatement",
                  "src": "1747:303:50",
                  "trueBody": {
                    "id": 54868,
                    "nodeType": "Block",
                    "src": "1781:269:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54862,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54780,
                                "src": "1983:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                  "typeString": "struct LaunchboxERC20.InitializeParams memory"
                                }
                              },
                              "id": 54863,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1990:23:50",
                              "memberName": "_communityTreasuryOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54763,
                              "src": "1983:30:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 54864,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54780,
                                "src": "2015:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                                  "typeString": "struct LaunchboxERC20.InitializeParams memory"
                                }
                              },
                              "id": 54865,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2022:16:50",
                              "memberName": "_communitySupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54753,
                              "src": "2015:23:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 54861,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47899,
                            "src": "1977:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 54866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1977:62:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54867,
                        "nodeType": "ExpressionStatement",
                        "src": "1977:62:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54871,
                        "name": "launchboxExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54741,
                        "src": "2118:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 54872,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54780,
                          "src": "2137:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                            "typeString": "struct LaunchboxERC20.InitializeParams memory"
                          }
                        },
                        "id": 54873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2144:20:50",
                        "memberName": "_tokenSupplyAfterFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54749,
                        "src": "2137:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54870,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47899,
                      "src": "2112:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:53:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54875,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:53:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54882,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2244:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LaunchboxERC20_$54896",
                              "typeString": "contract LaunchboxERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LaunchboxERC20_$54896",
                              "typeString": "contract LaunchboxERC20"
                            }
                          ],
                          "id": 54881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2236:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54880,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2236:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2236:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 54884,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54780,
                          "src": "2251:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                            "typeString": "struct LaunchboxERC20.InitializeParams memory"
                          }
                        },
                        "id": 54885,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2258:20:50",
                        "memberName": "_tokenSupplyAfterFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54749,
                        "src": "2251:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 54886,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54780,
                          "src": "2280:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                            "typeString": "struct LaunchboxERC20.InitializeParams memory"
                          }
                        },
                        "id": 54887,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2287:19:50",
                        "memberName": "_marketCapThreshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54755,
                        "src": "2280:26:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 54888,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54780,
                          "src": "2308:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                            "typeString": "struct LaunchboxERC20.InitializeParams memory"
                          }
                        },
                        "id": 54889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2315:7:50",
                        "memberName": "_router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54761,
                        "src": "2308:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54877,
                            "name": "launchboxExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54741,
                            "src": "2193:17:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 54876,
                          "name": "LaunchboxExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52526,
                          "src": "2175:17:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LaunchboxExchange_$52526_$",
                            "typeString": "type(contract LaunchboxExchange)"
                          }
                        },
                        "id": 54878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2175:36:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LaunchboxExchange_$52526",
                          "typeString": "contract LaunchboxExchange"
                        }
                      },
                      "id": 54879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2212:10:50",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52271,
                      "src": "2175:47:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address) payable external"
                      }
                    },
                    "id": 54890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:157:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54891,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:157:50"
                },
                {
                  "expression": {
                    "id": 54892,
                    "name": "launchboxExchange",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54741,
                    "src": "2349:17:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 54786,
                  "id": 54893,
                  "nodeType": "Return",
                  "src": "2342:24:50"
                }
              ]
            },
            "functionSelector": "4b0a7f8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 54783,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 54782,
                  "name": "initializer",
                  "nameLocations": [
                    "1017:11:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47304,
                  "src": "1017:11:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "1017:11:50"
              }
            ],
            "name": "initialize",
            "nameLocation": "957:10:50",
            "parameters": {
              "id": 54781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54780,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "992:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 54895,
                  "src": "968:30:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitializeParams_$54764_memory_ptr",
                    "typeString": "struct LaunchboxERC20.InitializeParams"
                  },
                  "typeName": {
                    "id": 54779,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54778,
                      "name": "InitializeParams",
                      "nameLocations": [
                        "968:16:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54764,
                      "src": "968:16:50"
                    },
                    "referencedDeclaration": 54764,
                    "src": "968:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitializeParams_$54764_storage_ptr",
                      "typeString": "struct LaunchboxERC20.InitializeParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:32:50"
            },
            "returnParameters": {
              "id": 54786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54895,
                  "src": "1038:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:9:50"
            },
            "scope": 54896,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54736,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "284:16:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48067,
              "src": "284:16:50"
            },
            "id": 54737,
            "nodeType": "InheritanceSpecifier",
            "src": "284:16:50"
          }
        ],
        "canonicalName": "LaunchboxERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54896,
          48067,
          49475,
          50274,
          50248,
          49245,
          47450
        ],
        "name": "LaunchboxERC20",
        "nameLocation": "266:14:50",
        "scope": 54897,
        "usedErrors": [
          47213,
          47216,
          49445,
          49450,
          49455,
          49464,
          49469,
          49474,
          49576,
          54766,
          54768,
          54770
        ],
        "usedEvents": [
          47221,
          50182,
          50191
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 50
}